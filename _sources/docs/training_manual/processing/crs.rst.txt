CRSs- Projection ပြောင်းလဲခြင်း (CRSs. Reprojecting)
============================================================


.. note:: ဤသင်ခန်းတွင် Processing သည် မည်ကဲ့သို့ CRS များကိုအသုံးပြုသည်ကို လေ့လာရမည်ဖြစ်ပါသည်။ Reprojecting ဟုခေါ်သည့် အလွန်အသုံးဝင်သော algorithm ကိုလည်း လေ့လာရမည်ဖြစ်ပါသည်။

CRS များသည် QGIS Processing အသုံးပြုသူများအတွက် လွန်စွာရှုပ်ထွေးပါသည်၊ ထို့ကြောင့် layer အသစ်တစ်ခုဖန်တီးသောအခါ geoalgorithm များမှ CRS များကို ကိုင်တွယ်ပုံအကြောင်း ယေဘုယျစည်းမျဉ်းအချို့ကို အောက်တွင် ဖော်ပြထားပါသည်။

* Input layer များစွာရှိလျှင် ပထမဦးဆုံး layer ၏ CRS ကိုအသုံးပြုပါလိမ့်မည်။ Layer များအားလုံးတွင် CRS အတူတူရှိသင့်သောကြောင့် ထို CRS ကို input layer များအားလုံး၏ CRS အဖြစ်မှတ်ယူပါသည်။ CRS မတူညီသော layer များကို အသုံးပြုလျှင် QGIS မှ သတိပေးပါလိမ့်မည်။ Input layer များ၏ CRS ကို parameter dialog ထဲတွင် နာမည်နှင့်အတူ ပြသပေးပါသည်။

.. figure:: img/crs/crs_layer.png

* Input layer တစ်ခုမျှ မရှိပဲ algorithm တွင် သီးသန့် CRS field တစ်ခုမပါရှိပါက project ၏ CRS ကိုအသုံးပြုပါလိမ့်မည် (ပြီးခဲ့သည့် သင်ခန်းစာထဲရှိ graticule algorithm ကဲ့သို့ ဖြစ်သည်)

ဤသင်ခန်းစာနှင့်သက်ဆိုင်သော project ကိုဖွင့်ပါ၊ 23030 နှင့် 4326 ဟုအမည်ပေးထားသော layer နှစ်ခုကို တွေ့ရပါမည်။ ၎င်းတို့ နှစ်ခုလုံးတွင် တူညီသော point များပါရှိပါသည်၊ သို့သော် CRS တော့မတူညီပါ (EPSG:23030 နှင့် EPSG:4326)။ ထို point များသည် တစ်နေရာထဲတွင် ကျရောက်နေပါမည်၊ အဘယ်ကြောင့်ဆိုသော် ၎င်းတို့သည် layer အတူတူမဟုတ်သော်လည်း QGIS သည် project CRS (EPSG:4326) သို့ projection ပြောင်းလဲပေးထားသောကြောင့်ဖြစ်သည်။ 

*Export/Add geometry columns* algorithm ကိုဖွင့်ပါ။

.. figure:: img/crs/add_geom.png


ဤ algorithm သည် vector layer တစ်ခု၏ attribute ဇယားထဲသို့ column အသစ်များကို ထည့်သွင်းပေးပါသည်။ Column များ၏ အကြောင်းအရာသည် layer ၏ ဂျီဩမေတြီအမျိုးအစားပေါ်မူတည်ပါသည်။ Point များအတွက်မူ point တစ်ခုချင်းစီ၏ X နှင့် Y ကိုဩဒိနိတ်များပါဝင်သော column အသစ်များကို ထည့်သွင်းပေးပါသည်။

Input layer field ထဲရှိ အသုံးပြုနိုင်သော layer များစာရင်းထဲတွင် layer တစ်ခုချင်းစီကို ၎င်းတို့၏သက်ဆိုင်ရာ CRS တစ်ခုစီဖြင့် တွေ့ရပါလိမ့်မည်။ ဆိုလိုသည်မှာ ၎င်း layer များသည် မြေပုံ canvas ထဲတွင် တစ်နေရာထဲတွင် ပေါ်နေသော်လည်း ၎င်းတို့သည် သီးခြား CRS တစ်ခုစီရှိနေခြင်းဖြစ်သည်။ 4326 layer ကိုရွေးချယ်ပါ။

Algorithm ၏ အခြားသော parameter သည် ရလာဒ် layer များတွင်ထည့်သွင်းပေးမည့် တန်ဖိုးအသစ်ကိုတွက်ချက်ရန် ကိုဩဒိနိတ်များကို algorithm မှ မည်ကဲ့သို့အသုံးပြုမည်ကို သတ်မှတ်ပေးပါသည်။ Algorithm အများစုတွင် ထိုကဲ့သို့သော option မျိုးမပါရှိပဲ ကိုဩဒိနိတ်များကို တိုက်ရိုက်သာအသုံးပြုခြင်းဖြစ်ပါသည်။ ကိုဩဒိနိတ်များကို သူ့အတိုင်းသာ အသုံးပြုရန် *Layer CRS* option ကို ရွေးချယ်ပါ။ ၎င်းသည် geoalgorithm အားလုံးနီးပါး၏ အလုပ်လုပ်ဆောင်သည့် ပုံစံဖြစ်သည်။

အခြား layer နှစ်ခုနှင့် တစ်ထပ်ထဲတူညီသော point များပါရှိသည့် layer အသစ်တစ်ခုကို ရရှိပါမည်။ Layer ၏ နာမည်ပေါ်တွင် right click နှိပ်ပြီး property ကိုဖွင့်ကြည့်ပါက ၎င်းသည် input layer ၏ CRS အတိုင်းအသုံးပြုထားသည်ကို တွေ့ရပါမည်၊ EPSG:4326 ဖြစ်ပါသည်။ Layer ကို QGIS ထဲသို့ ထည့်သွင်းလိုက်သောအခါ QGIS မှသိရှိပြီးသားဖြစ်သောကြောင့် layer ၏ CRS ကို ထည့်သွင်းပေးရန် မေးမြန်းတော့မည်မဟုတ်ပါ။

Layer အသစ်၏ attribute ဇယားကို ဖွင့်ကြည့်ပါက point တစ်ခုချင်းစီ၏ X နှင့် Y ကိုဩဒိနိတ်များပါရှိသော field အသစ်နှစ်ခုကို ရှိနေသည်ကို တွေ့ရပါမည်။

.. figure:: img/crs/attribs2.png

၎င်း option ကိုရွေးချယ်ထားခဲ့သောကြောင့် အဆိုပါ ကိုဩဒိနိတ်တန်ဖိုးများကို layer CRS ထဲတွင် ပေးထားပြီးသားဖြစ်ပါသည်။ သို့သော် အခြား option ကို ရွေးချယ်ခဲ့ပါက output layer ၏ CRS တွင်သတ်မှတ်ရန် input CRS ကိုအသုံးပြုသောကြောင့် CRS အတူတူဖြစ်နေပါမည်။ အခြား option ကိုရွေးချယ်ခြင်းဖြင့် တန်ဖိုးများ ကွဲပြားသွားနိုင်သော်လည်း ရလာဒ် point ကို မပြောင်းလဲစေနိုင်ပါ၊ သို့မဟုတ် input layer ၏ CRS နှင့် output layer ၏ CRS အတူတူပင်ဖြစ်နေပါမည်။ 


အခြား layer ကို အသုံးပြုပြီး ထိုအတိုင်း တွက်ချက်မှုလုပ်ဆောင်ပါ။ ရလာဒ် layer သည် အခြားသော layer များကဲ့သို့ နေရာတစ်ခုထဲတွင် အတိအကျဖြစ်နေသည်ကို တွေ့ရပါလိမ့်မည်၊ CRS သည် input layer ၏ CRS အတိုင်း EPSG:23030 ဖြစ်နေပါလိမ့်မည်။ 

ယခု ဖန်တီးထားသော layer ၏ attribute ဇယားကို ဖွင့်ကြည့်ပါက ပထမတစ်ကြိမ် ဖန်တီးထားခဲ့သော layer နှင့် တန်ဖိုးများမတူညီသည်ကို တွေ့ရပါလိမ့်မည်။

.. figure:: img/crs/attribs.png

ထိုသို့ဖြစ်ရခြင်းမှာ မူရင်း data မတူညီသောကြောင့်ဖြစ်ပြီး (၎င်းသည် မတူညီသော CRS ကို အသုံးပြုထားပါသည်) ကိုဩဒိနိတ်များကို မူရင်း data ယူထားသောကြောင့်ဖြစ်သည်။

ဤဥပမာများ၏ အဓိကအချက်မှာ geoalgorithm များသည် ၎င်းတို့၏ မူရင်း data source အတိုင်း layer ကို အသုံးပြုပြီး ပုံဖော်ပြသခြင်းမလုပ်မီတွင် QGIS မှ ပြုလုပ်မည့် projection ပြောင်းလဲခြင်းများကို လုံးဝ လုပ်ဆောင်ခြင်းမရှိပါ။ တစ်နည်းအားဖြင့် ဆိုရသော် မူရင်း data ကိုအမြဲတမ်းအသုံးပြုသည်ကို မှတ်သားထားပါ။ ဤဥပမာ၌ တစ်ကြိမ်တွင် layer တစ်ခုကိုသာ အသုံးပြုသည့်အတွက် ထိုကိစ္စသည် အလွန်အရေးမကြီးပါ။ သို့သော် layer များစွာလိုအပ်သော algorithm တစ်ခုတွင် (clip algorithm ကဲ့သို့) layer များသည် CRS များ မတူညီသောကြောင့် ကိုက်ညီမှုရှိရမည့် သို့မဟုတ် ထပ်နေရမည့် layer များသည် တစ်ခုနှင့်တစ်ခုလွန်စွာ ကွာဝေးနိုင်ပါသည်၊

Algorithm များသည် projection ပြောင်းလဲခြင်းများကို မလုပ်ဆောင်ပါ (reprojection algorithm မှလွဲ၍)၊ ထို့ကြောင့် layer များသည် CRS များကိုက်ညီမှုရှိရန် လိုအပ်ပါသည်။

CRS များနှင့်ပတ်သက်သော စိတ်ဝင်စားစရာကောင်းသည့်မော်ဂျူးသည် reprojection မော်ဂျူးဖြစ်ပါသည်။ ၎င်းသည် သီးသန့်လုပ်ဆောင်မှုတစ်ခုဖြစ်ပြီး input layer တစ်ခု (projection ပြောင်းလဲမည့် layer) ထည့်သွင်းပေးရမည်ဖြစ်သည်၊ သို့သော် output layer အတွက် input layer ၏ CRS ကို အသုံးပြုမည်မဟုတ်ပါ။

*Reproject layer* algorithm ကိုဖွင့်ပါ။

.. figure:: img/crs/reprojection.png

Layer များထဲမှ တစ်ခုခုကို input အဖြစ်ရွေးချယ်ပြီး destination CRS အဖြစ် EPSG:23029 ကိုရွေးချယ်ပါ။ Algorithm ကို run လိုက်ပါက layer အသစ်တစ်ခုရရှိပါလိမ့်မည်၊ layer အသစ်သည် input layer နှင့် ထပ်တူဖြစ်နေသော်လည်း CRS တူညီမည်မဟုတ်ပါ။ QGIS သည် on the fly projection ပြောင်းလဲပေးသောကြောင့် မြေပုံ canvas ပေါ်တွင် နေရာတစ်နေရာထဲ၌ ပေါ်နေမည်ဖြစ်သော်လည်း ၎င်းတို့၏မူရင်းကိုဩဒိနိတ်များသည် မတူညီကြပါ။ ထို layer အသစ်ကို input အနေဖြင့် အသုံးပြုပြီး *Export/Add geometry
columns* algorithm ကို run ကြည့်ပါက အသစ်ထည့်သွင်းထားသော ကိုဩဒိနိတ်များသည် ယခင်ကတွက်ချက်ထားခဲ့သော layer နှစ်ခုစလုံး၏ attribute ဇယားများထဲမှ ကိုဩဒိနိတ်များနှင့် ကွဲပြားနေသည်ကို တွေ့မြင်နိုင်ပါသည်၊ 
