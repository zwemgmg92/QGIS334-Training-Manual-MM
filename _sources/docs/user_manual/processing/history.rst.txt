.. _`processing.history`:

ရှေတွင်လုပ်ခဲ့သည့်အဆင့်များကို စီမံခန့်ခွဲရာနေရာ (The history manager)
=======================================================================

.. only:: html

   .. contents::
      :local:

လုပ်ဆောင်မှုများမှတ်တမ်း (The processing history)
--------------------------------------------------

Algorithm တစ်ခုကို စေခိုင်းလုပ်ဆောင်တိုင်း process နှင့်ပတ်သက်သောသတင်းအချက်အလက်များကို history manager ထဲတွင် သိမ်းဆည်းပါသည်။ စေခိုင်းလုပ်ဆောင်ထားသော ရက်စွဲနှင့်အချိန်ကို အသုံးပြုခဲ့သော parameter များအတူသိမ်းဆည်းထားသောကြောင့် Processing framework ကိုအသုံးပြုပြီး ဖန်တီးခဲ့သော လုပ်ငန်းများအားလုံးကို ပြန်ရှာခြင်းနှင့် ဆင့်ပွားလုပ်ဆောင်ရန် လွယ်ကူစေပါသည်။

.. _figure_history:

.. figure:: img/history.png
   :align: center

   မှတ်တမ်း

Algorithm ကို toolbox မှအသုံးပြုခဲ့လျှင်တောင်မှ process လုပ်ဆောင်ခဲ့သော သတင်းအချက်အလက်များကို command-line expression အဖြစ်သိမ်းထားပါသည်။ လေ့လာနေသူများသည် toolbox ကိုအသုံးပြုပြီး algorithm ကိုခေါ်ယူအသုံးပြုနိုင်ပြီး history manager ကို စစ်ဆေးကြည့်ရှုကာ command line မှမည်သို့ခေါ်ယူအသုံးပြုရမည် ဆိုတာကို ကြည့်ရှုနိုင်သောကြောင့် command-line interface အသုံးပြုမှုကိုလေ့လာနေသူများအတွက် အသုံးဝင်ပါသည်။

Row တစ်ခုပေါ်ကို right-click နှိပ်ပြီး အောက်ပါတို့ကိုလုပ်ဆောင်နိုင်သင့်ပါသည် -

* :guilabel:`Copy as Python Command` - Dialog မှအသုံးပြုသော တူညီသည့် :ref:`PyQGIS command <processing_console>` ကိုလွယ်လွယ်ကူကူ ကူးယူနိုင်ပါသည်။ command စာရင်းအောက်တွင် ဖော်ပြထားသော code နှင့်အတူတူပင် ဖြစ်ပါသည်။
* :guilabel:`Copy as qgis_process Command` - အကွာအဝေးယူနစ်များ၊ ဧရိယာယူနစ်များ၊ ellipsoid၊ သီးခြား layer များနှင့် GeoPackage ရလာဒ်များကဲ့သို့ ပုံမှန်မဟုတ်သည့် parameter တန်ဖိုးများ ကဲ့သို့သော environment setting များပါဝင်သော :ref:`qgis_process command <processing_standalone>` ကို အလွယ်တကူဖန်တီးနိုင်ပါသည်။
* :guilabel:`Copy as JSON` - Command ၏ setting များအားလုံးကို :file:`JSON` format တစ်ခုထဲသို့ကူးထည့်ပြီး qgis_process ကအသုံးပြုရန် အဆင်သင့်ဖြစ်စေပါသည်။ ရှုပ်ထွေးသော parameter များ (TIN interpolation parameter များကဲ့သို့) အတွက်ပင်လျှင် command များ၏ မျှော်လင့်ထားသော format ကိုကြည့်ရန် လွယ်ကူသော နည်းလမ်းဖြစ်ပါသည်။ ၎င်းတို့ကိုလွယ်ကူစွာ သိမ်းဆည်းနိုင်ပြီး တန်ဖိုးများကို algorithm dialog ထဲတွင် ကူးထည့်ပြီး နောက်ပိုင်းတွင်ပြန်လည်ရယူနိုင်ပါသည်။
* ပါဝင်ပတ်သက်သော algorithm နှင့် parameter များကိုအသုံးပြု၍ :guilabel:`Create Test...` (စမ်းသပ်မှုဖန်တီးခြင်း)၊ လမ်းညွှန်များကို :source:`Processing README file <python/plugins/processing/tests/README.md>` တွင်ဖတ်ရှုပါ။

မှတ်တမ်းတင်မှုထဲတွင် ထည့်ထားသောတန်ဖိုးများကိုရှာဖွေခြင်းမှ အပ ထည့်ထားသောတန်ဖိုးများပေါ်တွင် double-click ကိုနှိပ်ခြင်းဖြင့် process ကိုပြန်လည်စေခိုင်းလုပ်ဆောင်စေနိုင်ပါသည်။ ကြိုတင်သတ်မှတ်ပြီးထားသော parameter များဖြင့် algorithm dialog သည်ပွင့်လာမည်ဖြစ်ပြီး မိမိ၏လိုအပ်ချက်နှင့်ကိုက်ညီအောင်ပြင်ဆင်ပြီး algorithm ကိုပြန်လည်လုပ်ဆောင်နိုင်ပါသည်။

:guilabel:`History` dialog သည် QGIS Processing algorithm နှင့် scirpt များ၏ စမ်းသပ်ထားသော infrastructure ၏စုစည်းမှုတွင် ပါဝင်နိုင်စေရန် လွယ်ကူသောနည်းလမ်းတစ်ခုဖြစ်ပါသည်။


လုပ်ဆောင်မှုများမှတ်တမ်း (The processing log)
----------------------------------------------

History dialog တွင် စေခိုင်းလုပ်ဆောင်သော call များသာပါဝင်ပါသည်၊ သို့သော် algorithm ကိုစေခိုင်းလုပ်ဆောင်သောအခါ ရရှိလာသည့် သတင်းအချက်အလက်များ မပါဝင်ပါ။ ၎င်းသတင်းအချက်အလက်ကို QGIS log ထဲတွင် ရေးသားထားပါသည် (:menuselection:`View --> Panels --> Log Messages Panel`)။

အသုံးပြုသူများသည် console မှဆက်သွယ်လုပ်ဆောင်နိုင်သော command-line interface များကိုအသုံးပြုပြီး third-party algorithm များကိုစေခိုင်းလုပ်ဆောင်ပါသည်။ Console ကိုမပြသသော်လည်း ၎င်း algorithm များထဲမှ တစ်ခုကို စေခိုင်းလုပ်ဆောင်သောအခါတိုင်း လုပ်ဆောင်ပြီးသွားသော အဟောင်းများကို log ထဲတွင် ရေးသားပေးပါသည်။ ၎င်းအချက်အလက်များနှင့် log ကို စုပြုံရှုပ်ပွမနေစေရန် setting dialog ထဲတွင် provider တစ်ခုချင်းစီအတွက် ၎င်းကိုပိတ်ထားနိုင်ပါသည်။

အချို့သော algorithm များတွင် ထည့်သွင်းအသုံးပြုသော data ဖြင့် ရလာဒ်တစ်ခုဖန်တီးနိုင်လျှင်ပင် သတိပေးရန်အတွက် data နှင့်ပတ်သက်သော ဖြစ်နိုင်သည့်ပြဿနာများကိုရှာတွေ့သောအခါ ရလာဒ် comment သို့မဟုတ် အခြားသတင်းအချက်အလက်များကို log တွေဖော်ပြပါသည်။ မျှော်လင့်မထားသော ရလာဒ်များထွက်လာလျှင် log ထဲတွင် ထို message များကို စစ်ဆေးကြည့်ရှုပါ။
